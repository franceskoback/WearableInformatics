knitr::opts_chunk$set(echo = TRUE)
# Load required libraries
library(ggplot2)
# Read the aggregate CSV file
data <- read.csv("aggregate.csv")
View(data)
# Load required libraries
library(ggplot2)
# Read the aggregate CSV file
data <- read.csv("aggregate1.csv")
View(data)
# Convert the Date column to a date format
data$Date <- as.Date(data$Date)
# Iterate over unique ParticipantIdentifier values
participants <- unique(data$ParticipantIdentifier)
# Function to plot data for each participant
plotParticipantData <- function(participant) {
# Subset data for the current participant
participant_data <- subset(data, ParticipantIdentifier == participant)
# Create the plot
plot <- ggplot(participant_data, aes(x = Date)) +
geom_line(aes(y = RestingHeartRate, color = "Resting Heart Rate")) +
geom_line(aes(y = Sleep, color = "Sleep Duration")) +
geom_line(aes(y = Steps, color = "Steps")) +
labs(title = paste("Participant", participant), x = "Date", y = "Value") +
scale_color_manual(values = c("Resting Heart Rate" = "blue", "Sleep Duration" = "red", "Steps" = "green")) +
theme_minimal()
# Display the plot
print(plot)
}
# Generate and display the plots for each participant
for (participant in participants) {
plotParticipantData(participant)
}
View(data)
View(data)
View(data)
participants
participant_data <- subset(data, ParticipantIdentifier == participant)
View(participant_data)
plot <- ggplot(participant_data, aes(x = Date)) +
geom_line(aes(y = RestingHeartRate, color = "Resting Heart Rate")) +
geom_line(aes(y = Sleep, color = "Sleep Duration")) +
geom_line(aes(y = Steps, color = "Steps")) +
labs(title = paste("Participant", participant), x = "Date", y = "Value") +
scale_color_manual(values = c("Resting Heart Rate" = "blue", "Sleep Duration" = "red", "Steps" = "green")) +
theme_minimal()
# Display the plot
print(plot)
View(participant_data)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
View(participant_data)
participant_data <- subset(data, ParticipantIdentifier == participant)
View(participant_data)
View(data)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
View(data)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Convert the Date column to a date format
data$Date <- as.Date(data$Date)
# Iterate over unique ParticipantIdentifier values
participants <- unique(data$ParticipantIdentifier)
# Function to plot data for each participant
plotParticipantData <- function(participant) {
# Subset data for the current participant
participant_data <- subset(data, ParticipantIdentifier == participant)
# Create the plot
plot <- ggplot(participant_data, aes(x = Date)) +
geom_line(aes(y = RestingHeartRate, color = "Resting Heart Rate")) +
geom_line(aes(y = Sleep, color = "Sleep Duration")) +
geom_line(aes(y = Steps, color = "Steps")) +
labs(title = paste("Participant", participant), x = "Date", y = "Value") +
scale_color_manual(values = c("Resting Heart Rate" = "blue", "Sleep Duration" = "red", "Steps" = "green")) +
theme_minimal()
# Display the plot
print(plot)
}
# Generate and display the plots for each participant
for (participant in participants) {
plotParticipantData(participant)
}
# Load required libraries
library(ggplot2)
# Read the aggregate CSV file
data <- read.csv("aggregate1.csv")
# Convert the Date column to a date format
data$Date <- as.Date(data$Date)
# Iterate over unique ParticipantIdentifier values
participants <- unique(data$ParticipantIdentifier)
# Function to plot data for each participant
plotParticipantData <- function(participant) {
# Subset data for the current participant
participant_data <- subset(data, ParticipantIdentifier == participant)
# Create the plot
plot <- ggplot(participant_data, aes(x = Date)) +
geom_line(aes(y = RestingHeartRate, color = "Resting Heart Rate")) +
geom_line(aes(y = Sleep, color = "Sleep Duration")) +
geom_line(aes(y = Steps, color = "Steps")) +
labs(title = paste("Participant", participant), x = "Date", y = "Value") +
scale_color_manual(values = c("Resting Heart Rate" = "blue", "Sleep Duration" = "red", "Steps" = "green")) +
theme_minimal()
# Display the plot
print(plot)
}
# Generate and display the plots for each participant
for (participant in participants) {
plotParticipantData(participant)
}
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables_Github/Plotting1.R", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Convert the Date column to a date format
data$Date <- as.Date(data$Date)
# Iterate over unique ParticipantIdentifier values
participants <- unique(data$ParticipantIdentifier)
# Function to plot data for each participant
plotParticipantData <- function(participant) {
# Subset data for the current participant
participant_data <- subset(data, ParticipantIdentifier == participant)
# Create the plot
plot <- ggplot(participant_data, aes(x = Date)) +
geom_line(aes(y = RestingHeartRate, color = "Resting Heart Rate")) +
geom_line(aes(y = Sleep, color = "Sleep Duration")) +
geom_line(aes(y = Steps, color = "Steps")) +
labs(title = paste("Participant", participant), x = "Date", y = "Value") +
scale_color_manual(values = c("Resting Heart Rate" = "blue", "Sleep Duration" = "red", "Steps" = "green")) +
theme_minimal()
# Display the plot
print(plot)
}
# Generate and display the plots for each participant
for (participant in participants) {
plotParticipantData(participant)
}
# Load required libraries
library(ggplot2)
# Read the aggregate CSV file
data <- read.csv("aggregate1.csv")
# Convert the Date column to a date format
data$Date <- as.Date(data$Date)
# Iterate over unique ParticipantIdentifier values
participants <- unique(data$ParticipantIdentifier)
# Function to plot data for each participant
plotParticipantData <- function(participant) {
# Subset data for the current participant
participant_data <- subset(data, ParticipantIdentifier == participant)
# Create the plot
plot <- ggplot(participant_data, aes(x = Date)) +
geom_line(aes(y = RestingHeartRate, color = "Resting Heart Rate")) +
geom_line(aes(y = Sleep, color = "Sleep Duration")) +
geom_line(aes(y = Steps, color = "Steps")) +
labs(title = paste("Participant", participant), x = "Date", y = "Value") +
scale_color_manual(values = c("Resting Heart Rate" = "blue", "Sleep Duration" = "red", "Steps" = "green")) +
theme_minimal()
# Display the plot
print(plot)
}
# Generate and display the plots for each participant
for (participant in participants) {
plotParticipantData(participant)
}
# Display the combined plot
print(combined_plot)
# Load required libraries
library(ggplot2)
# Read the aggregate CSV file
data <- read.csv("aggregate1.csv")
# Convert the Date column to a date format
data$Date <- as.Date(data$Date)
# Iterate over unique ParticipantIdentifier values
participants <- unique(data$ParticipantIdentifier)
# Function to plot data for each participant
plotParticipantData <- function(participant) {
# Subset data for the current participant
participant_data <- subset(data, ParticipantIdentifier == participant)
# Create the plot
plot <- ggplot(participant_data, aes(x = Date)) +
geom_line(aes(y = RestingHeartRate, color = "Resting Heart Rate")) +
labs(title = paste("Participant", participant), x = "Date", y = "Resting Heart Rate") +
theme_minimal()
# Create a separate plot for Sleep Duration
sleep_plot <- ggplot(participant_data, aes(x = Date)) +
geom_line(aes(y = Sleep, color = "Sleep Duration")) +
labs(x = "Date", y = "Sleep Duration") +
theme_minimal()
# Create a separate plot for Steps
steps_plot <- ggplot(participant_data, aes(x = Date)) +
geom_line(aes(y = Steps, color = "Steps")) +
labs(x = "Date", y = "Steps") +
theme_minimal()
# Combine the plots using facet_wrap()
combined_plot <- ggplot() +
geom_blank() +  # Add a blank layer for the common axes
facet_wrap(~., scales = "free_y") +  # Arrange plots vertically
theme(strip.background = element_blank(), strip.text = element_blank()) +  # Remove strip labels
annotation_custom(ggplotGrob(plot), xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +  # Add the Resting Heart Rate plot
annotation_custom(ggplotGrob(sleep_plot), xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +  # Add the Sleep Duration plot
annotation_custom(ggplotGrob(steps_plot), xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)  # Add the Steps plot
# Display the combined plot
print(combined_plot)
}
# Generate and display the plots for each participant
for (participant in participants) {
plotParticipantData(participant)
}
# Load required libraries
library(ggplot2)
library(gridExtra)
# Read the aggregate CSV file
data <- read.csv("aggregate1.csv")
# Convert the Date column to a date format
data$Date <- as.Date(data$Date)
# Iterate over unique ParticipantIdentifier values
participants <- unique(data$ParticipantIdentifier)
# Function to plot data for each participant
plotParticipantData <- function(participant) {
# Subset data for the current participant
participant_data <- subset(data, ParticipantIdentifier == participant)
# Create the Resting Heart Rate plot
plot_heart_rate <- ggplot(participant_data, aes(x = Date, y = RestingHeartRate)) +
geom_line(color = "blue") +
labs(x = "Date", y = "Resting Heart Rate") +
theme_minimal()
# Create the Sleep Duration plot
plot_sleep_duration <- ggplot(participant_data, aes(x = Date, y = Sleep)) +
geom_line(color = "red") +
labs(x = "Date", y = "Sleep Duration") +
theme_minimal()
# Create the Steps plot
plot_steps <- ggplot(participant_data, aes(x = Date, y = Steps)) +
geom_line(color = "green") +
labs(x = "Date", y = "Steps") +
theme_minimal()
# Create a grid of subplots
grid_arrange_shared_legend <- function(..., ncol = length(list(...)), nrow = 1) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position = "bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, c(plots, ncol = ncol, nrow = nrow)),
legend,
heights = unit.c(unit(1, "npc") - lheight, lheight),
ncol = 1
)
}
combined_plot <- grid_arrange_shared_legend(plot_heart_rate, plot_sleep_duration, plot_steps, nrow = 3)
# Display the combined plot
print(combined_plot)
}
# Generate and display the plots for each participant
for (participant in participants) {
plotParticipantData(participant)
}
# Load required libraries
library(ggplot2)
library(gridExtra)
# Read the aggregate CSV file
data <- read.csv("aggregate1.csv")
# Convert the Date column to a date format
data$Date <- as.Date(data$Date)
# Iterate over unique ParticipantIdentifier values
participants <- unique(data$ParticipantIdentifier)
# Function to plot data for each participant
plotParticipantData <- function(participant) {
# Subset data for the current participant
participant_data <- subset(data, ParticipantIdentifier == participant)
# Create the Resting Heart Rate plot
plot_heart_rate <- ggplot(participant_data, aes(x = Date, y = RestingHeartRate)) +
geom_line(color = "blue") +
labs(x = "Date", y = "Resting Heart Rate") +
theme_minimal()
# Create the Sleep Duration plot
plot_sleep_duration <- ggplot(participant_data, aes(x = Date, y = Sleep)) +
geom_line(color = "red") +
labs(x = "Date", y = "Sleep Duration") +
theme_minimal()
# Create the Steps plot
plot_steps <- ggplot(participant_data, aes(x = Date, y = Steps)) +
geom_line(color = "green") +
labs(x = "Date", y = "Steps") +
theme_minimal()
# Create a grid of subplots
grid_arrange_shared_legend <- function(..., ncol = length(list(...)), nrow = 1) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position = "bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, c(plots, ncol = ncol, nrow = nrow)),
legend,
heights = unit.c(unit(1, "npc") - lheight, lheight),
ncol = 1
)
}
combined_plot <- grid_arrange_shared_legend(plot_heart_rate, plot_sleep_duration, plot_steps, nrow = 3)
# Display the combined plot
print(combined_plot)
}
# Generate and display the plots for each participant
for (participant in participants) {
plotParticipantData(participant)
}
# Load required libraries
library(ggplot2)
library(patchwork)
install.packages("patchwork")
# Load required libraries
library(ggplot2)
library(patchwork)
# Read the aggregate CSV file
data <- read.csv("aggregate1.csv")
# Convert the Date column to a date format
data$Date <- as.Date(data$Date)
# Iterate over unique ParticipantIdentifier values
participants <- unique(data$ParticipantIdentifier)
# Function to plot data for each participant
plotParticipantData <- function(participant) {
# Subset data for the current participant
participant_data <- subset(data, ParticipantIdentifier == participant)
# Create the Resting Heart Rate plot
plot_heart_rate <- ggplot(participant_data, aes(x = Date, y = RestingHeartRate)) +
geom_line(color = "blue") +
labs(x = "Date", y = "Resting Heart Rate") +
theme_minimal()
# Create the Sleep Duration plot
plot_sleep_duration <- ggplot(participant_data, aes(x = Date, y = Sleep)) +
geom_line(color = "red") +
labs(x = "Date", y = "Sleep Duration") +
theme_minimal()
# Create the Steps plot
plot_steps <- ggplot(participant_data, aes(x = Date, y = Steps)) +
geom_line(color = "green") +
labs(x = "Date", y = "Steps") +
theme_minimal()
# Combine the plots using patchwork
combined_plot <- plot_heart_rate + plot_sleep_duration + plot_steps + plot_layout(nrow = 3)
# Display the combined plot
print(combined_plot)
}
# Generate and display the plots for each participant
for (participant in participants) {
plotParticipantData(participant)
}
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables_Github/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables_Github/Plotting1.R", echo=TRUE)
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables_Github/Plotting1.R", echo=TRUE)
# Load required libraries
library(ggplot2)
library(patchwork)
# Read the aggregate CSV file
data <- read.csv("aggregate1.csv")
# Convert the Date column to a date format
data$Date <- as.Date(data$Date)
# Iterate over unique ParticipantIdentifier values
participants <- unique(data$ParticipantIdentifier)
# Function to plot data for each participant
plotParticipantData <- function(participant) {
# Subset data for the current participant
participant_data <- subset(data, ParticipantIdentifier == participant)
# Create the Resting Heart Rate plot
plot_heart_rate <- ggplot(participant_data, aes(x = Date, y = RestingHeartRate)) +
geom_line(color = "blue") +
labs(title = paste("Participant", participant), x = "Date", y = "Resting Heart Rate") +
theme_minimal()
# Create the Sleep Duration plot
plot_sleep_duration <- ggplot(participant_data, aes(x = Date, y = Sleep)) +
geom_line(color = "red") +
labs(title = paste("Participant", participant), x = "Date", y = "Sleep Duration") +
theme_minimal()
# Create the Steps plot
plot_steps <- ggplot(participant_data, aes(x = Date, y = Steps)) +
geom_line(color = "green") +
labs(title = paste("Participant", participant), x = "Date", y = "Steps") +
theme_minimal()
# Combine the plots using patchwork
combined_plot <- plot_heart_rate + plot_sleep_duration + plot_steps + plot_layout(nrow = 3)
# Display the combined plot
print(combined_plot)
}
# Generate and display the plots for each participant
for (participant in participants) {
plotParticipantData(participant)
}
# Load required libraries
library(ggplot2)
library(patchwork)
# Read the aggregate CSV file
data <- read.csv("aggregate1.csv")
# Convert the Date column to a date format
data$Date <- as.Date(data$Date)
# Iterate over unique ParticipantIdentifier values
participants <- unique(data$ParticipantIdentifier)
# Function to plot data for each participant
plotParticipantData <- function(participant) {
# Subset data for the current participant
participant_data <- subset(data, ParticipantIdentifier == participant)
# Create the Resting Heart Rate plot
plot_heart_rate <- ggplot(participant_data, aes(x = Date, y = RestingHeartRate)) +
geom_line(color = "blue") +
labs(title = paste("Participant", participant), x = "Date", y = "Resting Heart Rate") +
theme_minimal()
# Create the Sleep Duration plot
plot_sleep_duration <- ggplot(participant_data, aes(x = Date, y = Sleep)) +
geom_line(color = "red") +
labs(title = paste("Participant", participant), x = "Date", y = "Sleep Duration") +
theme_minimal()
# Create the Steps plot
plot_steps <- ggplot(participant_data, aes(x = Date, y = Steps)) +
geom_line(color = "green") +
labs(title = paste("Participant", participant), x = "Date", y = "Steps") +
theme_minimal()
# Combine the plots using patchwork
combined_plot <- plot_heart_rate + plot_sleep_duration + plot_steps + plot_layout(nrow = 3)
# Display the combined plot
print(combined_plot)
}
# Generate and display the plots for each participant
for (participant in participants) {
plotParticipantData(participant)
}
# Load required libraries
library(ggplot2)
library(patchwork)
# Read the aggregate CSV file
data <- read.csv("aggregate1.csv")
# Convert the Date column to a date format
data$Date <- as.Date(data$Date)
# Iterate over unique ParticipantIdentifier values
participants <- unique(data$ParticipantIdentifier)
# Function to plot data for each participant
plotParticipantData <- function(participant) {
# Subset data for the current participant
participant_data <- subset(data, ParticipantIdentifier == participant)
# Create the Resting Heart Rate plot
plot_heart_rate <- ggplot(participant_data, aes(x = Date, y = RestingHeartRate)) +
geom_line(color = "blue") +
labs(title = paste("Participant", participant), x = "Date", y = "Resting Heart Rate") +
theme_minimal()
# Create the Sleep Duration plot
plot_sleep_duration <- ggplot(participant_data, aes(x = Date, y = Sleep)) +
geom_line(color = "red") +
labs( x = "Date", y = "Sleep Duration") +
theme_minimal()
# Create the Steps plot
plot_steps <- ggplot(participant_data, aes(x = Date, y = Steps)) +
geom_line(color = "green") +
labs(x = "Date", y = "Steps") +
theme_minimal()
# Combine the plots using patchwork
combined_plot <- plot_heart_rate + plot_sleep_duration + plot_steps + plot_layout(nrow = 3)
# Display the combined plot
print(combined_plot)
}
# Generate and display the plots for each participant
for (participant in participants) {
plotParticipantData(participant)
}
# Load required libraries
library(ggplot2)
library(patchwork)
# Read the aggregate CSV file
data <- read.csv("aggregate1.csv")
# Convert the Date column to a date format
data$Date <- as.Date(data$Date)
# Iterate over unique ParticipantIdentifier values
participants <- unique(data$ParticipantIdentifier)
# Function to plot data for each participant
plotParticipantData <- function(participant) {
# Subset data for the current participant
participant_data <- subset(data, ParticipantIdentifier == participant)
# Create the Resting Heart Rate plot
plot_heart_rate <- ggplot(participant_data, aes(x = Date, y = RestingHeartRate)) +
geom_line(color = "#FF6EC7") +
labs(title = paste("Participant", participant), x = "Date", y = "Resting Heart Rate") +
theme_minimal()
# Create the Sleep Duration plot
plot_sleep_duration <- ggplot(participant_data, aes(x = Date, y = Sleep)) +
geom_line(color = "cyan") +
labs( x = "Date", y = "Sleep Duration") +
theme_minimal()
# Create the Steps plot
plot_steps <- ggplot(participant_data, aes(x = Date, y = Steps)) +
geom_line(color = "green") +
labs(x = "Date", y = "Steps") +
theme_minimal()
# Combine the plots using patchwork
combined_plot <- plot_heart_rate + plot_sleep_duration + plot_steps + plot_layout(nrow = 3)
# Display the combined plot
print(combined_plot)
}
# Generate and display the plots for each participant
for (participant in participants) {
plotParticipantData(participant)
}
source("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/Research/Wearables_Github/Plotting1.R", echo=TRUE)
